/*
 * Copyright (C) 2021 - 2025, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
 * Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 * Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: fyfej
 * Date: 2024-6-21
 */
using SanteDB.Core.BusinessRules;
using SanteDB.Core.Data.Quality.Configuration;
using SanteDB.OrmLite.Attributes;
using System;

namespace SanteDB.Persistence.Data.Model.Sys
{
    /// <summary>
    /// Represents a data quality configuration which is stored in the primary database
    /// </summary>
    [Table("DQ_CNF_SYSTBL")]
    public class DbDataQualityConfiguration : DbNonVersionedBaseData
    {

        /// <inheritdoc/>
        [Column("DQ_ID"), PrimaryKey, NotNull, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// True if the configuration is enabled
        /// </summary>
        [Column("ACTIVE"), NotNull]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for the data quality configuration
        /// </summary>
        [Column("MNEMONIC"), NotNull, Unique]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the data quality configuration
        /// </summary>
        [Column("NAME"), NotNull]
        public String Name { get; set; }
    }

    /// <summary>
    /// Identifies the data quality resource which is configured
    /// </summary>
    [Table("DQ_RES_SYSTBL")]
    public class DbDataQualityResourceConfiguration : DbIdentified
    {
        /// <inheritdoc />
        [Column("RES_ID"), PrimaryKey, AutoGenerated, NotNull]
        public override Guid Key { get; set; }

        /// <summary>
        /// Link to the DQ configuration set
        /// </summary>
        [Column("DQ_ID"), ForeignKey(typeof(DbDataQualityConfiguration), nameof(DbDataQualityConfiguration.Key)), NotNull]
        public Guid DataQualityConfigurationKey { get; set; }

        /// <summary>
        /// Gets or sets the resource name
        /// </summary>
        [Column("RES"), NotNull]
        public String ResourceName { get; set; }
    }

    /// <summary>
    /// Contains a single assertion for the data quality engine
    /// </summary>
    [Table("DQ_RES_ASRT_SYSTBL")]
    public class DbDataQualityResourceAssertion : DbIdentified
    {

        /// <summary>
        /// Gets or sets the assertion id
        /// </summary>
        [Column("ASRT_ID"), PrimaryKey, AutoGenerated, NotNull]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the data quality resource to which this applies
        /// </summary>
        [Column("RES_ID"), ForeignKey(typeof(DbDataQualityResourceConfiguration), nameof(DbDataQualityResourceConfiguration.Key)), NotNull]
        public Guid DataQualityResourceKey { get; set; }

        /// <summary>
        /// Gets or sets the mnemonic
        /// </summary>
        [Column("MNEMONIC"), Unique, NotNull]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the text on the assertion error
        /// </summary>
        [Column("TXT"), NotNull]
        public string Text { get; set; }

        /// <summary>
        /// The priority of the assertion
        /// </summary>
        [Column("PRI")]
        public DetectedIssuePriorityType Priority { get; set; }

        /// <summary>
        /// The evaluation of the assertion
        /// </summary>
        [Column("EVAL")]
        public AssertionEvaluationType Evaluation { get; set; }

        /// <summary>
        /// Gets or sets the expressions for the assertion
        /// </summary>
        [Column("EXPR"), NotNull]
        public String Expressions { get; set; }
    }
}
