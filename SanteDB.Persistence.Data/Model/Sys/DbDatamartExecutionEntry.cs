/*
 * Copyright (C) 2021 - 2024, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
 * Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 * Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: fyfej
 * Date: 2023-6-21
 */
using SanteDB.BI.Datamart.DataFlow;
using SanteDB.OrmLite.Attributes;
using SanteDB.Persistence.Data.Model.Security;
using System;

namespace SanteDB.Persistence.Data.Model.Sys
{
    /// <summary>
    /// Represents a single log entry
    /// </summary>
    [Table("BI_DM_EXE_SYSTBL")]
    public class DbDatamartExecutionEntry : DbIdentified
    {
        /// <summary>
        /// Gets or sets the key
        /// </summary>
        [Column("EXE_ID"), NotNull, PrimaryKey, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the datamart key
        /// </summary>
        [Column("DM_ID"), ForeignKey(typeof(DbDatamartRegistration), nameof(DbDatamartRegistration.Key))]
        public Guid DatamartKey { get; set; }

        /// <summary>
        /// Gets or sets the type of the log entry
        /// </summary>
        [Column("TYP_CS"), NotNull]
        public DataFlowExecutionPurposeType Purpose { get; set; }

        /// <summary>
        /// Gets or sets the outcome of the log entry (if known)
        /// </summary>
        [Column("OUTC_CS"), NotNull]
        public DataFlowExecutionOutcomeType Outcome { get; set; }

        /// <summary>
        /// Gets or sets the start time
        /// </summary>
        [Column("START_UTC"), AutoGenerated, NotNull]
        public DateTimeOffset StartTime { get; set; }

        /// <summary>
        /// Gets or sets the stop time
        /// </summary>
        [Column("END_UTC")]
        public DateTimeOffset? EndTime { get; set; }

        /// <summary>
        /// Gets or sets the user that created this entry
        /// </summary>
        [Column("CRT_PROV_ID"), ForeignKey(typeof(DbSecurityProvenance), nameof(DbSecurityProvenance.Key))]
        public Guid? CreatedByKey { get; set; }

        /// <summary>
        /// Gets or sets the file stream identifier of the diagnostic stream
        /// </summary>
        [Column("DIAG_STR_ID")]
        public Guid? DiagnosticStreamKey { get; set; }

    }
}
