/*
 * Copyright (C) 2021 - 2025, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
 * Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 * Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: fyfej
 * Date: 2023-6-21
 */
using SanteDB.Core.Matching;
using SanteDB.OrmLite.Attributes;
using System;

namespace SanteDB.Persistence.Data.Model.Sys
{
    /// <summary>
    /// Represents match configuration system table data
    /// </summary>
    [Table("match_cnf_systbl")]
    public class DbMatchConfiguration : DbIdentified
    {
        /// <summary>
        /// Primary key for the matching identifier
        /// </summary>
        [Column("match_id"), PrimaryKey, NotNull, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for this match 
        /// </summary>
        [Column("pub_id"), NotNull, Unique]
        public String Id { get; set; }

    }

    /// <summary>
    /// Match configuration version table
    /// </summary>
    [Table("match_cnf_vrsn_systbl")]
    public class DbMatchConfigurationVersion : DbVersionedData
    {
        /// <summary>
        /// Gets or sets the version id
        /// </summary>
        [Column("vrsn_id"), NotNull, PrimaryKey, AutoGenerated]
        public override Guid VersionKey { get; set; }

        /// <summary>
        /// Gets or sets the key of the configuration
        /// </summary>
        [Column("match_id"), NotNull, ForeignKey(typeof(DbMatchConfiguration), nameof(DbMatchConfiguration.Key))]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the application type
        /// </summary>
        [Column("trg_typ"), NotNull]
        public string AppliesToType { get; set; }

        /// <summary>
        /// Gets or sets the state
        /// </summary>
        [Column("sts"), NotNull]
        public MatchConfigurationStatus Status { get; set; }

        /// <summary>
        /// Gets or sets the definition
        /// </summary>
        [Column("def"), NotNull]
        public byte[] Definition { get; set; }

    }
}
