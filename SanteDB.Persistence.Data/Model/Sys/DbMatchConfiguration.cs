using SanteDB.Core.Matching;
using SanteDB.OrmLite.Attributes;
using System;

namespace SanteDB.Persistence.Data.Model.Sys
{
    /// <summary>
    /// Represents match configuration system table data
    /// </summary>
    [Table("match_cnf_systbl")]
    public class DbMatchConfiguration : DbIdentified
    {
        /// <summary>
        /// Primary key for the matching identifier
        /// </summary>
        [Column("match_id"), PrimaryKey, NotNull, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for this match 
        /// </summary>
        [Column("pub_id"), NotNull, Unique]
        public String Id { get; set; }

    }

    /// <summary>
    /// Match configuration version table
    /// </summary>
    [Table("match_cnf_vrsn_systbl")]
    public class DbMatchConfigurationVersion : DbVersionedData
    {
        /// <summary>
        /// Gets or sets the version id
        /// </summary>
        [Column("vrsn_id"), NotNull, PrimaryKey, AutoGenerated]
        public override Guid VersionKey { get; set; }

        /// <summary>
        /// Gets or sets the key of the configuration
        /// </summary>
        [Column("match_id"), NotNull, ForeignKey(typeof(DbMatchConfiguration), nameof(DbMatchConfiguration.Key))]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the application type
        /// </summary>
        [Column("trg_typ"), NotNull]
        public string AppliesToType { get; set; }

        /// <summary>
        /// Gets or sets the state
        /// </summary>
        [Column("sts"), NotNull]
        public MatchConfigurationStatus Status { get; set; }

        /// <summary>
        /// Gets or sets the definition
        /// </summary>
        [Column("def"), NotNull]
        public byte[] Definition { get; set; }

    }
}
