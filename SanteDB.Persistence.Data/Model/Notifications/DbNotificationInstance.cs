/*
 * Copyright (C) 2021 - 2025, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
 * Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 * Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 */
using System;
using SanteDB.OrmLite.Attributes;
using SanteDB.Persistence.Data.Model.Concepts;

namespace SanteDB.Persistence.Data.Model.Notifications
{
    /// <summary>
    /// Represents a notification instance.
    /// </summary>
    [Table("nfn_inst_tbl")]
    public class DbNotificationInstance : DbNonVersionedBaseData
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DbNotificationInstance"/> class.
        /// </summary>
        public DbNotificationInstance()
        {

        }

        /// <summary>
        /// Gets or sets the key of the notification instance.
        /// </summary>
        [Column("inst_id"), PrimaryKey, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the notification template key of the notification instance.
        /// </summary>
        [Column("nfn_tpl_id"), ForeignKey(typeof(DbNotificationTemplate), nameof(DbNotificationTemplate.Key)), NotNull]
        public Guid NotificationTemplateKey { get; set; }

        /// <summary>
        /// Gets or sets the entity type key of the notification instance.
        /// </summary>
        [Column("ent_typ_cd_id"), ForeignKey(typeof(DbConcept), nameof(DbConcept.Key)), NotNull]
        public Guid EntityTypeKey { get; set; }

        /// <summary>
        /// Gets or sets the mnemonic of the notification instance.
        /// </summary>
        [Column("mnemonic"), NotNull]
        public String Mnemonic { get; set; }

        /// <summary>
        /// Gets or sets the name of the notification instance.
        /// </summary>
        [Column("inst_name"), NotNull]
        public String Name { get; set; }

        /// <summary>
        /// Gets or sets the state key of the notification instance.
        /// </summary>
        [Column("state_cd_id"), ForeignKey(typeof(DbConcept), nameof(DbConcept.Key)), NotNull]
        public Guid StateKey { get; set; }

        /// <summary>
        /// Gets or sets the description of the notification instance.
        /// </summary>
        [Column("descr")]
        public String Description { get; set; }

        /// <summary>
        /// Gets or sets the filter expression of the notification instance.
        /// </summary>
        [Column("fltr_expr"), NotNull]
        public String FilterExpression { get; set; }

        /// <summary>
        /// Gets or sets the trigger expression of the notification instance.
        /// </summary>
        [Column("trgr_expr"), NotNull]
        public String TriggerExpression { get; set; }

        /// <summary>
        /// Gets or sets the target expression of the notification instance.
        /// </summary>
        [Column("trg_expr"), NotNull]
        public String TargetExpression { get; set; }

        /// <summary>
        /// Gets or sets the last sent at date time of the notification instance.
        /// </summary>
        [Column("last_sent_utc")]
        public DateTimeOffset? LastSentAt { get; set; }
    }
}
