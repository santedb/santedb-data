/*
 * Copyright (C) 2021 - 2023, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
 * Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 * Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: fyfej
 * Date: 2023-5-19
 */
using SanteDB.OrmLite.Attributes;
using System;



namespace SanteDB.Persistence.Data.Model.Security
{
    /// <summary>
    /// Security applicationDb Should only be one entry here as well
    /// </summary>
    [Table("sec_app_tbl")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public class DbSecurityApplication : DbNonVersionedBaseData
    {

        /// <summary>
        /// Gets or sets the application id
        /// </summary>
        [Column("app_id"), PrimaryKey, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the public identifier.
        /// </summary>
        /// <value>The public identifier.</value>
        [Column("app_pub_id"), IgnoreCase]
        public String PublicId
        {
            get;
            set;
        }

        /// <summary>
        /// Application authentication secret
        /// </summary>
        [Column("app_scrt"), Secret]
        public String Secret { get; set; }

        /// <summary>
        /// Replaces application identifier
        /// </summary>
        [Column("rplc_app_id")]
        public Guid? ReplacesApplicationKey { get; set; }

        /// <summary>
        /// Gets or sets the lockout
        /// </summary>
        [Column("locked")]
        public DateTimeOffset? Lockout { get; set; }

        /// <summary>
        /// Sets whether the lockout was explicitly set
        /// </summary>
        public bool LockoutSpecified { get; set; }

        /// <summary>
        /// Gets or sets the lockout
        /// </summary>
        [Column("fail_auth")]
        public int? InvalidAuthAttempts { get; set; }

        /// <summary>
        /// Gets the last authenticated time
        /// </summary>
        [Column("last_auth_utc")]
        public DateTimeOffset? LastAuthentication { get; set; }


    }


    /// <summary>
    /// User claim
    /// </summary>
    [Table("sec_app_clm_tbl")]
    public class DbApplicationClaim : DbAssociation
    {

        /// <summary>
        /// Gets or sets the primary key for the claim
        /// </summary>
        [Column("clm_id"), PrimaryKey, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the source key
        /// </summary>
        [Column("app_id"), ForeignKey(typeof(DbSecurityApplication), nameof(DbSecurityApplication.Key))]
        public override Guid SourceKey { get; set; }

        /// <summary>
        /// Claim type key
        /// </summary>
        [Column("clm_typ")]
        public String ClaimType { get; set; }

        /// <summary>
        /// Claim value 
        /// </summary>
        [Column("clm_val")]
        public String ClaimValue { get; set; }

        /// <summary>
        /// The time the claim expires
        /// </summary>
        [Column("exp_utc")]
        public DateTime? ClaimExpiry { get; set; }

    }
}

