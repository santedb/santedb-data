/*
 * Copyright (C) 2021 - 2023, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
 * Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 * Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: fyfej
 * Date: 2023-5-19
 */
using SanteDB.Client.Disconnected.Data.Synchronization;
using SanteDB.OrmLite.Attributes;
using System;

namespace SanteDB.Persistence.Synchronization.ADO.Model
{
    [Table("sync_log_systbl")]
    internal class DbSynchronizationLogEntry : ISynchronizationLogEntry, ISynchronizationLogQuery
    {
        [Column("id"), PrimaryKey, AutoGenerated]
        public Guid Key { get; set; }

        [Column("res_typ"), NotNull]
        public string ResourceType { get; set; }

        [Column("lst_sync_utc")]
        public DateTimeOffset? LastSync { get; set; }

        [Column("lst_etag")]
        public string LastETag { get; set; }

        [Column("fltr")]
        public string Filter { get; set; }

        [Column("qry_id")]
        public Guid? QueryId { get; set; }
        [Column("qry_offst")]
        public int? QueryOffset { get; set; }
        [Column("qry_strt_utc")]
        public DateTimeOffset? QueryStartTime { get; set; }
        [Column("last_err")]
        public String LastError { get; set; }

        /// <summary>
        /// Instructs the ORM to persist NULL values when true
        /// </summary>
        public bool QueryIdSpecified { get; set; }
        /// <summary>
        /// Instructs the ORM to persist NULL values when true
        /// </summary>
        public bool QueryOffsetSpecified { get; set; }
        /// <summary>
        /// Instructs the ORM to persist NULL values when true
        /// </summary>
        public bool QueryStartTimeSpecified { get; set; }
        public bool LastErrorSpecified { get; set; }

        /// <inheritdoc/>
        string ISynchronizationLogEntry.ResourceType => this.ResourceType;

        /// <inheritdoc/>
        string ISynchronizationLogEntry.Filter => this.Filter;

        /// <inheritdoc/>
        DateTimeOffset? ISynchronizationLogEntry.LastSync => this.LastSync;

        /// <inheritdoc/>
        string ISynchronizationLogEntry.LastETag => this.LastETag;

        /// <inheritdoc/>
        string ISynchronizationLogEntry.LastError => this.LastETag;

        /// <inheritdoc/>
        Guid ISynchronizationLogQuery.QueryId => this.QueryId.GetValueOrDefault();

        /// <inheritdoc/>
        int ISynchronizationLogQuery.QueryOffset => this.QueryOffset.GetValueOrDefault();

        /// <inheritdoc/>
        DateTime ISynchronizationLogQuery.QueryStartTime => this.QueryStartTime.GetValueOrDefault().DateTime;
    }
}
