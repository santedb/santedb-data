using SanteDB.Client.Disconnected.Data.Synchronization;
using SanteDB.Core.Model;
using SanteDB.OrmLite.Attributes;
using System;
using System.Collections.Generic;
using System.Text;

namespace SanteDB.Persistence.Synchronization.ADO.Model
{
    [Table("sync_log_tbl")]
    internal class DbSynchronizationLogEntry : ISynchronizationLogEntry, ISynchronizationLogQuery
    {
        [Column("id"), PrimaryKey, AutoGenerated]
        public Guid Key { get; set; }

        [Column("res_typ"), NotNull]
        public string ResourceType { get; set; }

        [Column("lst_sync_utc")]
        public DateTime? LastSync { get; set; }

        [Column("lst_etag")]
        public string LastETag { get; set; }

        [Column("fltr")]
        public string Filter { get; set; }

        [Column("qry_id")]
        public Guid? QueryId { get; set; }
        [Column("qry_offst")]
        public int? QueryOffset { get; set; }
        [Column("qry_strt_utc")]
        public DateTime? QueryStartTime { get; set; }

        Guid ISynchronizationLogQuery.QueryId { get => this.QueryId ?? default; set => this.QueryId = value; }
        int ISynchronizationLogQuery.QueryOffset { get => this.QueryOffset ?? default; set => this.QueryOffset = value; }
        DateTime ISynchronizationLogQuery.QueryStartTime { get => this.QueryStartTime ?? default; set => this.QueryStartTime = value; }

        DateTime ISynchronizationLogEntry.LastSync => LastSync ?? default;
    }
}
